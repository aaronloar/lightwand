
STM32F100.elf:     file format elf32-littlearm
STM32F100.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001c1

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x0000052c memsz 0x0000052c flags r-x
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         000002f8  08000000  08000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text.main    000000a8  080002f8  080002f8  000082f8  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text.bitBanger 00000040  080003a0  080003a0  000083a0  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text.generate_values 00000048  080003e0  080003e0  000083e0  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.concatenate_pixel 00000050  08000428  08000428  00008428  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.bb_1    00000060  08000478  08000478  00008478  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.bb_0    00000054  080004d8  080004d8  000084d8  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .debug_info   00000427  00000000  00000000  0000852c  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000209  00000000  00000000  00008953  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000000c8  00000000  00000000  00008b5c  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000a8  00000000  00000000  00008c24  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00000226  00000000  00000000  00008ccc  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000037e  00000000  00000000  00008ef2  2**0  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000070  00000000  00000000  00009270  2**0  CONTENTS, READONLY
 14 .ARM.attributes 00000033  00000000  00000000  000092e0  2**0  CONTENTS, READONLY
 15 .debug_frame  00000214  00000000  00000000  00009314  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  .text	00000000 .text
080002f8 l    d  .text.main	00000000 .text.main
080003a0 l    d  .text.bitBanger	00000000 .text.bitBanger
080003e0 l    d  .text.generate_values	00000000 .text.generate_values
08000428 l    d  .text.concatenate_pixel	00000000 .text.concatenate_pixel
08000478 l    d  .text.bb_1	00000000 .text.bb_1
080004d8 l    d  .text.bb_0	00000000 .text.bb_0
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 
080002f0  w    F .text	00000006 tim7_irq_handler
080002f0  w    F .text	00000006 exti15_10_irq_handler
080002f0  w    F .text	00000006 tim4_irq_handler
08000000 g     O .text	00000130 functionVectors
080001c0 g     F .text	000000e8 reset_handler
08000130 g       .text	00000000 __section_table_start
20000000 g       .text.bb_0	00000000 __data_start__
080002f0  w    F .text	00000006 uart5_irq_handler
080002f0  w    F .text	00000006 i2c2_er_irq_handler
080002f0  w    F .text	00000006 usart3_irq_handler
080002f0  w    F .text	00000006 dma1_channel2_irq_handler
08000000 g       *ABS*	00000000 __vectors_start__
080002f0  w    F .text	00000006 exti2_irq_handler
080002f0  w    F .text	00000006 dma2_channel2_irq_handler
080002f0  w    F .text	00000006 tim1_cc_irq_handler
0800052c g       .text.bb_0	00000000 __exidx_end
0800013c g       .text	00000000 __data_section_table_end
0800052c g       .text.bb_0	00000000 __etext
080002f0  w    F .text	00000006 dma2_channel1_irq_handler
080002f0  w    F .text	00000006 adc1_irq_handler
080002c0  w    F .text	00000006 busfault_handler
08000188 g     F .text	00000036 bss_init
080003a0 g     F .text.bitBanger	00000040 bitBanger
080002f0  w    F .text	00000006 i2c2_ev_irq_handler
080002e8  w    F .text	00000006 systick_handler
080002f0  w    F .text	00000006 tim6_dac_irq_handler
080002f0  w    F .text	00000006 tim14_irq_handler
20000000 g       .text.bb_0	00000000 __HeapLimit
20000000 g       .text.bb_0	00000000 __bss_start__
080002b8  w    F .text	00000006 memmanage_handler
080002f0  w    F .text	00000006 i2c1_ev_irq_handler
080002f0  w    F .text	00000006 dma1_channel3_irq_handler
0800052c g       .text.bb_0	00000000 __exidx_start
080002f0  w    F .text	00000006 dam2_channel4_5_irq_handler
080002f0  w    F .text	00000006 tim1_up_tim16_irq_handler
080002f0  w    F .text	00000006 tim1_trg_com_tim17_irq_handler
080002d0  w    F .text	00000006 svc_handler
080002f0  w    F .text	00000006 dma1_channel7_irq_handler
080003e0 g     F .text.generate_values	00000048 generate_values
08000130 g       .text	00000000 __data_section_table
080002f0  w    F .text	00000006 dma1_channel5_irq_handler
080002f0  w    F .text	00000006 int_default_handler
08000144 g     F .text	00000042 data_init
080002f0  w    F .text	00000006 spi2_irq_handler
20000000 g       .text.bb_0	00000000 end
080002f0  w    F .text	00000006 window_watchdog_irq_handler
20000000 g       .text.bb_0	00000000 __data_end__
080002f0  w    F .text	00000006 exti1_irq_handler
20000000 g       .text.bb_0	00000000 __bss_end__
080002f0  w    F .text	00000006 exti0_irq_handler
080002f0  w    F .text	00000006 i2c1_er_irq_handler
08000478 g     F .text.bb_1	00000054 bb_1
20002000 g       *ABS*	00000000 _vStackTop
080002f0  w    F .text	00000006 exti9_5_irq_handler
08000144 g       .text	00000000 __bss_section_table_end
080002d8  w    F .text	00000006 debugmon_handler
080002f0  w    F .text	00000006 rtc_alarm_irq_handler
080002f0  w    F .text	00000006 dma1_channel4_irq_handler
080002f0  w    F .text	00000006 dma2_channel3_irq_handler
080002f0  w    F .text	00000006 tim3_irq_handler
080002f8 g     F .text.main	000000a8 main
080002e0  w    F .text	00000006 pendsv_handler
080002f0  w    F .text	00000006 tamper_stamp_irq_handler
20000000 g       .text.bb_0	00000000 __end__
080002f0  w    F .text	00000006 spi1_irq_handler
080002c8  w    F .text	00000006 usagefault_handler
0800013c g       .text	00000000 __bss_section_table
080002f0  w    F .text	00000006 uart4_irq_handler
080002f0  w    F .text	00000006 dma1_channel6_irq_handler
20002000 g       *ABS*	00000000 __StackTop
080002f0  w    F .text	00000006 fsmc_irq_handler
080002f0  w    F .text	00000006 exti4_irq_handler
080002f0  w    F .text	00000006 rcc_irq_handler
08000144 g       .text	00000000 __section_table_end
080002b0  w    F .text	00000006 hardfault_handler
080002f0  w    F .text	00000006 cec_irq_handler
08000428 g     F .text.concatenate_pixel	0000004e concatenate_pixel
080002f0  w    F .text	00000006 spi3_irq_handler
080002a8  w    F .text	00000006 nmi_handler
20002000 g       *ABS*	00000000 __StackLimit
080004d8 g     F .text.bb_0	0000004c bb_0
080002f0  w    F .text	00000006 tim13_irq_handler
080002f0  w    F .text	00000006 usart2_irq_handler
080002f0  w    F .text	00000006 dma1_channel1_irq_handler
080002f0  w    F .text	00000006 usart1_irq_handler
080002f0  w    F .text	00000006 exti3_irq_handler
080002f0  w    F .text	00000006 pvd_irq_handler
080002f0  w    F .text	00000006 tim5_irq_handler
080002f0  w    F .text	00000006 tim2_irq_handler
080002f0  w    F .text	00000006 rtc_wakeup_irq_handler
080002f0  w    F .text	00000006 tim1_brk_tim15_irq_handler
080002f0  w    F .text	00000006 flash_irq_handler
080002f0  w    F .text	00000006 tim12_irq_handler



Disassembly of section .text:

08000000 <functionVectors>:
 8000000:	00 20 00 20 c1 01 00 08 a9 02 00 08 b1 02 00 08     . . ............
 8000010:	b9 02 00 08 c1 02 00 08 c9 02 00 08 00 00 00 00     ................
	...
 800002c:	d1 02 00 08 d9 02 00 08 00 00 00 00 e1 02 00 08     ................
 800003c:	e9 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 800004c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 800005c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 800006c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 800007c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
	...
 800009c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 80000ac:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 80000bc:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 80000cc:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 80000dc:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 80000ec:	f1 02 00 08 f1 02 00 08 f1 02 00 08 00 00 00 00     ................
 80000fc:	00 00 00 00 f1 02 00 08 00 00 00 00 f1 02 00 08     ................
 800010c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 800011c:	f1 02 00 08 f1 02 00 08 f1 02 00 08 f1 02 00 08     ................
 800012c:	f1 02 00 08                                         ....

08000130 <__data_section_table>:
 8000130:	0800052c 	.word	0x0800052c
 8000134:	20000000 	.word	0x20000000
 8000138:	00000000 	.word	0x00000000

0800013c <__bss_section_table>:
 800013c:	20000000 	.word	0x20000000
 8000140:	00000000 	.word	0x00000000

08000144 <data_init>:
 8000144:	b480      	push	{r7}
 8000146:	b089      	sub	sp, #36	; 0x24
 8000148:	af00      	add	r7, sp, #0
 800014a:	60f8      	str	r0, [r7, #12]
 800014c:	60b9      	str	r1, [r7, #8]
 800014e:	607a      	str	r2, [r7, #4]
 8000150:	68bb      	ldr	r3, [r7, #8]
 8000152:	61fb      	str	r3, [r7, #28]
 8000154:	68fb      	ldr	r3, [r7, #12]
 8000156:	61bb      	str	r3, [r7, #24]
 8000158:	2300      	movs	r3, #0
 800015a:	617b      	str	r3, [r7, #20]
 800015c:	e00a      	b.n	8000174 <data_init+0x30>
 800015e:	69fb      	ldr	r3, [r7, #28]
 8000160:	1d1a      	adds	r2, r3, #4
 8000162:	61fa      	str	r2, [r7, #28]
 8000164:	69ba      	ldr	r2, [r7, #24]
 8000166:	1d11      	adds	r1, r2, #4
 8000168:	61b9      	str	r1, [r7, #24]
 800016a:	6812      	ldr	r2, [r2, #0]
 800016c:	601a      	str	r2, [r3, #0]
 800016e:	697b      	ldr	r3, [r7, #20]
 8000170:	3304      	adds	r3, #4
 8000172:	617b      	str	r3, [r7, #20]
 8000174:	697a      	ldr	r2, [r7, #20]
 8000176:	687b      	ldr	r3, [r7, #4]
 8000178:	429a      	cmp	r2, r3
 800017a:	d3f0      	bcc.n	800015e <data_init+0x1a>
 800017c:	3724      	adds	r7, #36	; 0x24
 800017e:	46bd      	mov	sp, r7
 8000180:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000184:	4770      	bx	lr
 8000186:	bf00      	nop

08000188 <bss_init>:
 8000188:	b480      	push	{r7}
 800018a:	b085      	sub	sp, #20
 800018c:	af00      	add	r7, sp, #0
 800018e:	6078      	str	r0, [r7, #4]
 8000190:	6039      	str	r1, [r7, #0]
 8000192:	687b      	ldr	r3, [r7, #4]
 8000194:	60fb      	str	r3, [r7, #12]
 8000196:	2300      	movs	r3, #0
 8000198:	60bb      	str	r3, [r7, #8]
 800019a:	e007      	b.n	80001ac <bss_init+0x24>
 800019c:	68fb      	ldr	r3, [r7, #12]
 800019e:	1d1a      	adds	r2, r3, #4
 80001a0:	60fa      	str	r2, [r7, #12]
 80001a2:	2200      	movs	r2, #0
 80001a4:	601a      	str	r2, [r3, #0]
 80001a6:	68bb      	ldr	r3, [r7, #8]
 80001a8:	3304      	adds	r3, #4
 80001aa:	60bb      	str	r3, [r7, #8]
 80001ac:	68ba      	ldr	r2, [r7, #8]
 80001ae:	683b      	ldr	r3, [r7, #0]
 80001b0:	429a      	cmp	r2, r3
 80001b2:	d3f3      	bcc.n	800019c <bss_init+0x14>
 80001b4:	3714      	adds	r7, #20
 80001b6:	46bd      	mov	sp, r7
 80001b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop

080001c0 <reset_handler>:
 80001c0:	b580      	push	{r7, lr}
 80001c2:	b084      	sub	sp, #16
 80001c4:	af00      	add	r7, sp, #0
 80001c6:	4b2b      	ldr	r3, [pc, #172]	; (8000274 <reset_handler+0xb4>)
 80001c8:	60fb      	str	r3, [r7, #12]
 80001ca:	e013      	b.n	80001f4 <reset_handler+0x34>
 80001cc:	68fb      	ldr	r3, [r7, #12]
 80001ce:	1d1a      	adds	r2, r3, #4
 80001d0:	60fa      	str	r2, [r7, #12]
 80001d2:	681b      	ldr	r3, [r3, #0]
 80001d4:	60bb      	str	r3, [r7, #8]
 80001d6:	68fb      	ldr	r3, [r7, #12]
 80001d8:	1d1a      	adds	r2, r3, #4
 80001da:	60fa      	str	r2, [r7, #12]
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	607b      	str	r3, [r7, #4]
 80001e0:	68fb      	ldr	r3, [r7, #12]
 80001e2:	1d1a      	adds	r2, r3, #4
 80001e4:	60fa      	str	r2, [r7, #12]
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	603b      	str	r3, [r7, #0]
 80001ea:	68b8      	ldr	r0, [r7, #8]
 80001ec:	6879      	ldr	r1, [r7, #4]
 80001ee:	683a      	ldr	r2, [r7, #0]
 80001f0:	f7ff ffa8 	bl	8000144 <data_init>
 80001f4:	68fa      	ldr	r2, [r7, #12]
 80001f6:	4b20      	ldr	r3, [pc, #128]	; (8000278 <reset_handler+0xb8>)
 80001f8:	429a      	cmp	r2, r3
 80001fa:	d3e7      	bcc.n	80001cc <reset_handler+0xc>
 80001fc:	4b1f      	ldr	r3, [pc, #124]	; (800027c <reset_handler+0xbc>)
 80001fe:	60fb      	str	r3, [r7, #12]
 8000200:	e00d      	b.n	800021e <reset_handler+0x5e>
 8000202:	68fb      	ldr	r3, [r7, #12]
 8000204:	1d1a      	adds	r2, r3, #4
 8000206:	60fa      	str	r2, [r7, #12]
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	607b      	str	r3, [r7, #4]
 800020c:	68fb      	ldr	r3, [r7, #12]
 800020e:	1d1a      	adds	r2, r3, #4
 8000210:	60fa      	str	r2, [r7, #12]
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	603b      	str	r3, [r7, #0]
 8000216:	6878      	ldr	r0, [r7, #4]
 8000218:	6839      	ldr	r1, [r7, #0]
 800021a:	f7ff ffb5 	bl	8000188 <bss_init>
 800021e:	68fa      	ldr	r2, [r7, #12]
 8000220:	4b17      	ldr	r3, [pc, #92]	; (8000280 <reset_handler+0xc0>)
 8000222:	429a      	cmp	r2, r3
 8000224:	d3ed      	bcc.n	8000202 <reset_handler+0x42>
 8000226:	4b17      	ldr	r3, [pc, #92]	; (8000284 <reset_handler+0xc4>)
 8000228:	4a17      	ldr	r2, [pc, #92]	; (8000288 <reset_handler+0xc8>)
 800022a:	601a      	str	r2, [r3, #0]
 800022c:	4b17      	ldr	r3, [pc, #92]	; (800028c <reset_handler+0xcc>)
 800022e:	2201      	movs	r2, #1
 8000230:	601a      	str	r2, [r3, #0]
 8000232:	4b17      	ldr	r3, [pc, #92]	; (8000290 <reset_handler+0xd0>)
 8000234:	2215      	movs	r2, #21
 8000236:	601a      	str	r2, [r3, #0]
 8000238:	4b16      	ldr	r3, [pc, #88]	; (8000294 <reset_handler+0xd4>)
 800023a:	2210      	movs	r2, #16
 800023c:	601a      	str	r2, [r3, #0]
 800023e:	4b16      	ldr	r3, [pc, #88]	; (8000298 <reset_handler+0xd8>)
 8000240:	2215      	movs	r2, #21
 8000242:	601a      	str	r2, [r3, #0]
 8000244:	4b15      	ldr	r3, [pc, #84]	; (800029c <reset_handler+0xdc>)
 8000246:	4a16      	ldr	r2, [pc, #88]	; (80002a0 <reset_handler+0xe0>)
 8000248:	601a      	str	r2, [r3, #0]
 800024a:	bf00      	nop
 800024c:	4b13      	ldr	r3, [pc, #76]	; (800029c <reset_handler+0xdc>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000254:	2b00      	cmp	r3, #0
 8000256:	d0f9      	beq.n	800024c <reset_handler+0x8c>
 8000258:	4b10      	ldr	r3, [pc, #64]	; (800029c <reset_handler+0xdc>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000260:	2b00      	cmp	r3, #0
 8000262:	d0f3      	beq.n	800024c <reset_handler+0x8c>
 8000264:	4b0f      	ldr	r3, [pc, #60]	; (80002a4 <reset_handler+0xe4>)
 8000266:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 800026a:	601a      	str	r2, [r3, #0]
 800026c:	f000 f844 	bl	80002f8 <main>
 8000270:	e7fe      	b.n	8000270 <reset_handler+0xb0>
 8000272:	bf00      	nop
 8000274:	08000130 	.word	0x08000130
 8000278:	0800013c 	.word	0x0800013c
 800027c:	0800013c 	.word	0x0800013c
 8000280:	08000144 	.word	0x08000144
 8000284:	40021004 	.word	0x40021004
 8000288:	04114002 	.word	0x04114002
 800028c:	4002102c 	.word	0x4002102c
 8000290:	40021014 	.word	0x40021014
 8000294:	4002101c 	.word	0x4002101c
 8000298:	40021018 	.word	0x40021018
 800029c:	40021000 	.word	0x40021000
 80002a0:	01010000 	.word	0x01010000
 80002a4:	e000e104 	.word	0xe000e104

080002a8 <nmi_handler>:
 80002a8:	b480      	push	{r7}
 80002aa:	af00      	add	r7, sp, #0
 80002ac:	e7fe      	b.n	80002ac <nmi_handler+0x4>
 80002ae:	bf00      	nop

080002b0 <hardfault_handler>:
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	e7fe      	b.n	80002b4 <hardfault_handler+0x4>
 80002b6:	bf00      	nop

080002b8 <memmanage_handler>:
 80002b8:	b480      	push	{r7}
 80002ba:	af00      	add	r7, sp, #0
 80002bc:	e7fe      	b.n	80002bc <memmanage_handler+0x4>
 80002be:	bf00      	nop

080002c0 <busfault_handler>:
 80002c0:	b480      	push	{r7}
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	e7fe      	b.n	80002c4 <busfault_handler+0x4>
 80002c6:	bf00      	nop

080002c8 <usagefault_handler>:
 80002c8:	b480      	push	{r7}
 80002ca:	af00      	add	r7, sp, #0
 80002cc:	e7fe      	b.n	80002cc <usagefault_handler+0x4>
 80002ce:	bf00      	nop

080002d0 <svc_handler>:
 80002d0:	b480      	push	{r7}
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	e7fe      	b.n	80002d4 <svc_handler+0x4>
 80002d6:	bf00      	nop

080002d8 <debugmon_handler>:
 80002d8:	b480      	push	{r7}
 80002da:	af00      	add	r7, sp, #0
 80002dc:	e7fe      	b.n	80002dc <debugmon_handler+0x4>
 80002de:	bf00      	nop

080002e0 <pendsv_handler>:
 80002e0:	b480      	push	{r7}
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	e7fe      	b.n	80002e4 <pendsv_handler+0x4>
 80002e6:	bf00      	nop

080002e8 <systick_handler>:
 80002e8:	b480      	push	{r7}
 80002ea:	af00      	add	r7, sp, #0
 80002ec:	e7fe      	b.n	80002ec <systick_handler+0x4>
 80002ee:	bf00      	nop

080002f0 <adc1_irq_handler>:
 80002f0:	b480      	push	{r7}
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	e7fe      	b.n	80002f4 <adc1_irq_handler+0x4>
 80002f6:	bf00      	nop

Disassembly of section .text.main:

080002f8 <main>:
 80002f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002fa:	b085      	sub	sp, #20
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	4c21      	ldr	r4, [pc, #132]	; (8000384 <main+0x8c>)
 8000300:	4d21      	ldr	r5, [pc, #132]	; (8000388 <main+0x90>)
 8000302:	6025      	str	r5, [r4, #0]
 8000304:	4c21      	ldr	r4, [pc, #132]	; (800038c <main+0x94>)
 8000306:	4d22      	ldr	r5, [pc, #136]	; (8000390 <main+0x98>)
 8000308:	6025      	str	r5, [r4, #0]
 800030a:	4c22      	ldr	r4, [pc, #136]	; (8000394 <main+0x9c>)
 800030c:	4d22      	ldr	r5, [pc, #136]	; (8000398 <main+0xa0>)
 800030e:	6025      	str	r5, [r4, #0]
 8000310:	4c22      	ldr	r4, [pc, #136]	; (800039c <main+0xa4>)
 8000312:	4d1d      	ldr	r5, [pc, #116]	; (8000388 <main+0x90>)
 8000314:	6025      	str	r5, [r4, #0]
 8000316:	2432      	movs	r4, #50	; 0x32
 8000318:	73bc      	strb	r4, [r7, #14]
 800031a:	7bbe      	ldrb	r6, [r7, #14]
 800031c:	4634      	mov	r4, r6
 800031e:	3c01      	subs	r4, #1
 8000320:	60bc      	str	r4, [r7, #8]
 8000322:	b2f4      	uxtb	r4, r6
 8000324:	f04f 0500 	mov.w	r5, #0
 8000328:	0169      	lsls	r1, r5, #5
 800032a:	ea41 61d4 	orr.w	r1, r1, r4, lsr #27
 800032e:	0160      	lsls	r0, r4, #5
 8000330:	b2f0      	uxtb	r0, r6
 8000332:	f04f 0100 	mov.w	r1, #0
 8000336:	014b      	lsls	r3, r1, #5
 8000338:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800033c:	0142      	lsls	r2, r0, #5
 800033e:	4633      	mov	r3, r6
 8000340:	009b      	lsls	r3, r3, #2
 8000342:	3303      	adds	r3, #3
 8000344:	3307      	adds	r3, #7
 8000346:	08db      	lsrs	r3, r3, #3
 8000348:	00db      	lsls	r3, r3, #3
 800034a:	ebad 0d03 	sub.w	sp, sp, r3
 800034e:	466b      	mov	r3, sp
 8000350:	3303      	adds	r3, #3
 8000352:	089b      	lsrs	r3, r3, #2
 8000354:	009b      	lsls	r3, r3, #2
 8000356:	607b      	str	r3, [r7, #4]
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4618      	mov	r0, r3
 800035c:	f000 f840 	bl	80003e0 <generate_values>
 8000360:	2300      	movs	r3, #0
 8000362:	73fb      	strb	r3, [r7, #15]
 8000364:	e009      	b.n	800037a <main+0x82>
 8000366:	7bfa      	ldrb	r2, [r7, #15]
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800036e:	4618      	mov	r0, r3
 8000370:	f000 f816 	bl	80003a0 <bitBanger>
 8000374:	7bfb      	ldrb	r3, [r7, #15]
 8000376:	3301      	adds	r3, #1
 8000378:	73fb      	strb	r3, [r7, #15]
 800037a:	7bfb      	ldrb	r3, [r7, #15]
 800037c:	2b31      	cmp	r3, #49	; 0x31
 800037e:	d9f2      	bls.n	8000366 <main+0x6e>
 8000380:	e7ee      	b.n	8000360 <main+0x68>
 8000382:	bf00      	nop
 8000384:	40010800 	.word	0x40010800
 8000388:	44444443 	.word	0x44444443
 800038c:	40010804 	.word	0x40010804
 8000390:	4444444b 	.word	0x4444444b
 8000394:	40011004 	.word	0x40011004
 8000398:	44444433 	.word	0x44444433
 800039c:	40010c04 	.word	0x40010c04

Disassembly of section .text.bitBanger:

080003a0 <bitBanger>:
 80003a0:	b580      	push	{r7, lr}
 80003a2:	b084      	sub	sp, #16
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	6078      	str	r0, [r7, #4]
 80003a8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80003ac:	60fb      	str	r3, [r7, #12]
 80003ae:	2300      	movs	r3, #0
 80003b0:	72fb      	strb	r3, [r7, #11]
 80003b2:	e00f      	b.n	80003d4 <bitBanger+0x34>
 80003b4:	687a      	ldr	r2, [r7, #4]
 80003b6:	68fb      	ldr	r3, [r7, #12]
 80003b8:	4013      	ands	r3, r2
 80003ba:	2b00      	cmp	r3, #0
 80003bc:	d002      	beq.n	80003c4 <bitBanger+0x24>
 80003be:	f000 f85b 	bl	8000478 <bb_1>
 80003c2:	e001      	b.n	80003c8 <bitBanger+0x28>
 80003c4:	f000 f888 	bl	80004d8 <bb_0>
 80003c8:	68fb      	ldr	r3, [r7, #12]
 80003ca:	085b      	lsrs	r3, r3, #1
 80003cc:	60fb      	str	r3, [r7, #12]
 80003ce:	7afb      	ldrb	r3, [r7, #11]
 80003d0:	3301      	adds	r3, #1
 80003d2:	72fb      	strb	r3, [r7, #11]
 80003d4:	7afb      	ldrb	r3, [r7, #11]
 80003d6:	2b17      	cmp	r3, #23
 80003d8:	d9ec      	bls.n	80003b4 <bitBanger+0x14>
 80003da:	3710      	adds	r7, #16
 80003dc:	46bd      	mov	sp, r7
 80003de:	bd80      	pop	{r7, pc}

Disassembly of section .text.generate_values:

080003e0 <generate_values>:
 80003e0:	b480      	push	{r7}
 80003e2:	b085      	sub	sp, #20
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	6078      	str	r0, [r7, #4]
 80003e8:	2300      	movs	r3, #0
 80003ea:	60bb      	str	r3, [r7, #8]
 80003ec:	2300      	movs	r3, #0
 80003ee:	73fb      	strb	r3, [r7, #15]
 80003f0:	e012      	b.n	8000418 <generate_values+0x38>
 80003f2:	7bfb      	ldrb	r3, [r7, #15]
 80003f4:	009b      	lsls	r3, r3, #2
 80003f6:	687a      	ldr	r2, [r7, #4]
 80003f8:	4413      	add	r3, r2
 80003fa:	68ba      	ldr	r2, [r7, #8]
 80003fc:	601a      	str	r2, [r3, #0]
 80003fe:	7bfa      	ldrb	r2, [r7, #15]
 8000400:	4613      	mov	r3, r2
 8000402:	009b      	lsls	r3, r3, #2
 8000404:	4413      	add	r3, r2
 8000406:	021b      	lsls	r3, r3, #8
 8000408:	4413      	add	r3, r2
 800040a:	019a      	lsls	r2, r3, #6
 800040c:	4413      	add	r3, r2
 800040e:	019b      	lsls	r3, r3, #6
 8000410:	60bb      	str	r3, [r7, #8]
 8000412:	7bfb      	ldrb	r3, [r7, #15]
 8000414:	3301      	adds	r3, #1
 8000416:	73fb      	strb	r3, [r7, #15]
 8000418:	7bfb      	ldrb	r3, [r7, #15]
 800041a:	2b31      	cmp	r3, #49	; 0x31
 800041c:	d9e9      	bls.n	80003f2 <generate_values+0x12>
 800041e:	3714      	adds	r7, #20
 8000420:	46bd      	mov	sp, r7
 8000422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000426:	4770      	bx	lr

Disassembly of section .text.concatenate_pixel:

08000428 <concatenate_pixel>:
 8000428:	b480      	push	{r7}
 800042a:	b085      	sub	sp, #20
 800042c:	af00      	add	r7, sp, #0
 800042e:	4613      	mov	r3, r2
 8000430:	4602      	mov	r2, r0
 8000432:	71fa      	strb	r2, [r7, #7]
 8000434:	460a      	mov	r2, r1
 8000436:	71ba      	strb	r2, [r7, #6]
 8000438:	717b      	strb	r3, [r7, #5]
 800043a:	2300      	movs	r3, #0
 800043c:	60fb      	str	r3, [r7, #12]
 800043e:	79fb      	ldrb	r3, [r7, #7]
 8000440:	68fa      	ldr	r2, [r7, #12]
 8000442:	4413      	add	r3, r2
 8000444:	60fb      	str	r3, [r7, #12]
 8000446:	68fb      	ldr	r3, [r7, #12]
 8000448:	021b      	lsls	r3, r3, #8
 800044a:	60fb      	str	r3, [r7, #12]
 800044c:	79bb      	ldrb	r3, [r7, #6]
 800044e:	68fa      	ldr	r2, [r7, #12]
 8000450:	4413      	add	r3, r2
 8000452:	60fb      	str	r3, [r7, #12]
 8000454:	68fb      	ldr	r3, [r7, #12]
 8000456:	021b      	lsls	r3, r3, #8
 8000458:	60fb      	str	r3, [r7, #12]
 800045a:	797b      	ldrb	r3, [r7, #5]
 800045c:	68fa      	ldr	r2, [r7, #12]
 800045e:	4413      	add	r3, r2
 8000460:	60fb      	str	r3, [r7, #12]
 8000462:	68fb      	ldr	r3, [r7, #12]
 8000464:	021b      	lsls	r3, r3, #8
 8000466:	60fb      	str	r3, [r7, #12]
 8000468:	68fb      	ldr	r3, [r7, #12]
 800046a:	4618      	mov	r0, r3
 800046c:	3714      	adds	r7, #20
 800046e:	46bd      	mov	sp, r7
 8000470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000474:	4770      	bx	lr
 8000476:	bf00      	nop

Disassembly of section .text.bb_1:

08000478 <bb_1>:
 8000478:	b480      	push	{r7}
 800047a:	af00      	add	r7, sp, #0
 800047c:	e92d 0003 	stmdb	sp!, {r0, r1}
 8000480:	4812      	ldr	r0, [pc, #72]	; (80004cc <bb_1+0x54>)
 8000482:	4913      	ldr	r1, [pc, #76]	; (80004d0 <bb_1+0x58>)
 8000484:	6001      	str	r1, [r0, #0]
 8000486:	bf00      	nop
 8000488:	bf00      	nop
 800048a:	bf00      	nop
 800048c:	bf00      	nop
 800048e:	bf00      	nop
 8000490:	bf00      	nop
 8000492:	bf00      	nop
 8000494:	bf00      	nop
 8000496:	bf00      	nop
 8000498:	bf00      	nop
 800049a:	bf00      	nop
 800049c:	bf00      	nop
 800049e:	bf00      	nop
 80004a0:	bf00      	nop
 80004a2:	bf00      	nop
 80004a4:	bf00      	nop
 80004a6:	490b      	ldr	r1, [pc, #44]	; (80004d4 <bb_1+0x5c>)
 80004a8:	6001      	str	r1, [r0, #0]
 80004aa:	bf00      	nop
 80004ac:	bf00      	nop
 80004ae:	bf00      	nop
 80004b0:	bf00      	nop
 80004b2:	bf00      	nop
 80004b4:	bf00      	nop
 80004b6:	bf00      	nop
 80004b8:	bf00      	nop
 80004ba:	bf00      	nop
 80004bc:	bf00      	nop
 80004be:	bf00      	nop
 80004c0:	bf00      	nop
 80004c2:	bc03      	pop	{r0, r1}
 80004c4:	46bd      	mov	sp, r7
 80004c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ca:	4770      	bx	lr
 80004cc:	40010c10 	.word	0x40010c10
 80004d0:	00000200 	.word	0x00000200
 80004d4:	02000000 	.word	0x02000000

Disassembly of section .text.bb_0:

080004d8 <bb_0>:
 80004d8:	b480      	push	{r7}
 80004da:	af00      	add	r7, sp, #0
 80004dc:	e92d 0003 	stmdb	sp!, {r0, r1}
 80004e0:	4810      	ldr	r0, [pc, #64]	; (8000524 <bb_0+0x4c>)
 80004e2:	4911      	ldr	r1, [pc, #68]	; (8000528 <bb_0+0x50>)
 80004e4:	6001      	str	r1, [r0, #0]
 80004e6:	bf00      	nop
 80004e8:	bf00      	nop
 80004ea:	bf00      	nop
 80004ec:	bf00      	nop
 80004ee:	bf00      	nop
 80004f0:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80004f4:	6001      	str	r1, [r0, #0]
 80004f6:	bf00      	nop
 80004f8:	bf00      	nop
 80004fa:	bf00      	nop
 80004fc:	bf00      	nop
 80004fe:	bf00      	nop
 8000500:	bf00      	nop
 8000502:	bf00      	nop
 8000504:	bf00      	nop
 8000506:	bf00      	nop
 8000508:	bf00      	nop
 800050a:	bf00      	nop
 800050c:	bf00      	nop
 800050e:	bf00      	nop
 8000510:	bf00      	nop
 8000512:	bf00      	nop
 8000514:	bf00      	nop
 8000516:	bf00      	nop
 8000518:	bf00      	nop
 800051a:	bc03      	pop	{r0, r1}
 800051c:	46bd      	mov	sp, r7
 800051e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000522:	4770      	bx	lr
 8000524:	40010c10 	.word	0x40010c10
 8000528:	00000200 	.word	0x00000200
